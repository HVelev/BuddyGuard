// <auto-generated />
using System;
using BuddyGuard.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuddyGuard.Core.Migrations
{
    [DbContext(typeof(BuddyguardDbContext))]
    partial class BuddyguardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.AnimalRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnimalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnimalSpecies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PetDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("RequestId");

                    b.ToTable("AnimalRequests");
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.AnimalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Малко куче"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Голямо куче"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Котка"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Друго"
                        });
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Абдовица",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Банишора",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Барите",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Белите брези",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Бенковски",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Бизнес парк София",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Бокар",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 8,
                            Name = "Борово",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ботунец",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 10,
                            Name = "Бояна",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 11,
                            Name = "Бункера",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 12,
                            Name = "Бъкстон",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 13,
                            Name = "Витоша",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 14,
                            Name = "Владимир Заимов",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 15,
                            Name = "Враждебна",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 16,
                            Name = "Връбница",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 17,
                            Name = "Връбница-1",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 18,
                            Name = "Връбница-2",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 19,
                            Name = "Гевгелийски квартал",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 20,
                            Name = "Гео Милев",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 21,
                            Name = "Горна баня",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 22,
                            Name = "Горубляне",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 23,
                            Name = "Гоце Делчев",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 24,
                            Name = "Дианабад",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 25,
                            Name = "Димитър Миленков",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 26,
                            Name = "Драгалевци",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 27,
                            Name = "Драз махала",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 28,
                            Name = "Дружба",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 29,
                            Name = "Дървеница",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 30,
                            Name = "Западен парк",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 31,
                            Name = "Захарна фабрика",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 32,
                            Name = "Зона Б-18",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 33,
                            Name = "Зона Б-19",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 34,
                            Name = "Зона Б-5-3",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 35,
                            Name = "Иван Вазов",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 36,
                            Name = "Изгрев",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 37,
                            Name = "Изток",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 38,
                            Name = "Илинден",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 39,
                            Name = "Илиянци",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 40,
                            Name = "Киноцентър",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 41,
                            Name = "Княжево",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 42,
                            Name = "Красна поляна",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 43,
                            Name = "Красно село",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 44,
                            Name = "Кремиковци",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 45,
                            Name = "Крива река",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 46,
                            Name = "Кръстова вада",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 47,
                            Name = "Кюлуците",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 48,
                            Name = "Лагера",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 49,
                            Name = "Лев Толстой",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 50,
                            Name = "Левски",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 51,
                            Name = "Лозенец",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 52,
                            Name = "Люлин",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 53,
                            Name = "Малашевци",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 54,
                            Name = "Малинова долина",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 55,
                            Name = "Манастирски ливади",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 56,
                            Name = "Младост 1",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 57,
                            Name = "Младост 1А",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 58,
                            Name = "Младост 2",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 59,
                            Name = "Младост 3",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 60,
                            Name = "Младост 4",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 61,
                            Name = "Модерно преградие",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 62,
                            Name = "Момкова махала",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 63,
                            Name = "Мотописта",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 64,
                            Name = "Мусагеница",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 65,
                            Name = "Надежда",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 66,
                            Name = "Обеля",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 67,
                            Name = "Оборище",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 68,
                            Name = "Овча Купел",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 69,
                            Name = "Овча Купел 1",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 70,
                            Name = "Овча Купел 2",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 71,
                            Name = "Орландовци",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 72,
                            Name = "Павлово",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 73,
                            Name = "Панчарево",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 74,
                            Name = "Подуяне",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 75,
                            Name = "Полигона",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 76,
                            Name = "Разсадника-Коньовица",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 77,
                            Name = "Редута",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 78,
                            Name = "Република",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 79,
                            Name = "Света Троица",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 80,
                            Name = "Свобода",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 81,
                            Name = "Сердика",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 82,
                            Name = "Сеславци",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 83,
                            Name = "Симеоново",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 84,
                            Name = "Славия",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 85,
                            Name = "Слатина",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 86,
                            Name = "Стефан Караджа",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 87,
                            Name = "Стрелбище",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 88,
                            Name = "Студентски град",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 89,
                            Name = "Сухата река",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 90,
                            Name = "Суходол",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 91,
                            Name = "Требич",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 92,
                            Name = "Триъгълника",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 93,
                            Name = "Факултета",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 94,
                            Name = "Филиповци",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 95,
                            Name = "Фондови жилища",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 96,
                            Name = "Хаджи Димитър",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 97,
                            Name = "Хиподрума",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 98,
                            Name = "Хладилника",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 99,
                            Name = "Христо Ботев",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 100,
                            Name = "Цариградски комплекс",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 101,
                            Name = "Център",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 102,
                            Name = "Челопечене",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 103,
                            Name = "Чепинско шосе",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 104,
                            Name = "Южен парк",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 105,
                            Name = "Ючбунар",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 106,
                            Name = "Яворов",
                            Price = 4.99m
                        });
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationId");

                    b.Property<DateTime?>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RequestSentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("Requests");

                    b.HasCheckConstraint("CK_Request_LocationId", "LocationId > 0");
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.RequestService", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int?>("AnimalRequestId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId", "RequestId");

                    b.HasIndex("AnimalRequestId");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestServices");
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsForCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WalkLength")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Две разходки без камера",
                            Price = 7.99m,
                            WalkLength = "30 минути"
                        },
                        new
                        {
                            Id = 2,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Две разходки с камера",
                            Price = 13.99m,
                            WalkLength = "30 минути"
                        },
                        new
                        {
                            Id = 3,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Разходка без камера",
                            Price = 4.99m,
                            WalkLength = "30 минути"
                        },
                        new
                        {
                            Id = 4,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Разходка с камера",
                            Price = 7.99m,
                            WalkLength = "30 минути"
                        },
                        new
                        {
                            Id = 5,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Две разходки без камера",
                            Price = 15.99m,
                            WalkLength = "60 минути"
                        },
                        new
                        {
                            Id = 6,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Две разходки с камера",
                            Price = 23.99m,
                            WalkLength = "60 минути"
                        },
                        new
                        {
                            Id = 7,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Разходка без камера",
                            Price = 9.99m,
                            WalkLength = "60 минути"
                        },
                        new
                        {
                            Id = 8,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Разходка с камера",
                            Price = 13.99m,
                            WalkLength = "60 минути"
                        },
                        new
                        {
                            Id = 9,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Две разходки без камера",
                            Price = 11.99m,
                            WalkLength = "Комбинирани (30мин + 60мин)"
                        },
                        new
                        {
                            Id = 10,
                            AnimalTypeId = 1,
                            IsForCustomer = false,
                            Name = "Две разходки с камера",
                            Price = 18.99m,
                            WalkLength = "Комбинирани (30мин + 60мин)"
                        },
                        new
                        {
                            Id = 11,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Две разходки без камера",
                            Price = 11.99m,
                            WalkLength = "30 минути"
                        },
                        new
                        {
                            Id = 12,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Две разходки с камера",
                            Price = 18.99m,
                            WalkLength = "30 минути"
                        },
                        new
                        {
                            Id = 13,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Разходка без камера",
                            Price = 7.99m,
                            WalkLength = "30 минути"
                        },
                        new
                        {
                            Id = 14,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Разходка с камера",
                            Price = 11.99m,
                            WalkLength = "30 минути"
                        },
                        new
                        {
                            Id = 15,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Две разходки без камера",
                            Price = 20.99m,
                            WalkLength = "60 минути"
                        },
                        new
                        {
                            Id = 16,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Две разходки с камера",
                            Price = 5.99m,
                            WalkLength = "60 минути"
                        },
                        new
                        {
                            Id = 17,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Разходка без камера",
                            Price = 4.99m,
                            WalkLength = "60 минути"
                        },
                        new
                        {
                            Id = 18,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Разходка с камера",
                            Price = 14.99m,
                            WalkLength = "60 минути"
                        },
                        new
                        {
                            Id = 19,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Две разходки без камера",
                            Price = 16.99m,
                            WalkLength = "Комбинирани (30мин + 60мин)"
                        },
                        new
                        {
                            Id = 20,
                            AnimalTypeId = 2,
                            IsForCustomer = false,
                            Name = "Две разходки с камера",
                            Price = 23.99m,
                            WalkLength = "Комбинирани (30мин + 60мин)"
                        },
                        new
                        {
                            Id = 21,
                            IsForCustomer = false,
                            Name = "Еднократно ресане",
                            Price = 4.99m
                        },
                        new
                        {
                            Id = 22,
                            IsForCustomer = false,
                            Name = "Цялостно къпане",
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 23,
                            AnimalTypeId = 3,
                            IsForCustomer = false,
                            Name = "Разходка навън",
                            Price = 5.99m
                        },
                        new
                        {
                            Id = 24,
                            IsForCustomer = false,
                            Name = "Ветеринарен преглед",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 25,
                            IsForCustomer = true,
                            Name = "Събиране на поща",
                            Price = 3.50m
                        },
                        new
                        {
                            Id = 26,
                            IsForCustomer = true,
                            Name = "Посрещане/Изпращане на пратка",
                            Price = 3.50m
                        },
                        new
                        {
                            Id = 27,
                            IsForCustomer = true,
                            Name = "Еднократно поливане на цветя",
                            Price = 2.99m
                        });
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "307894cc-5f1e-4792-ae6b-40293f3dedb5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5258d86a-324b-446e-ad7f-3e82cef8cbd7",
                            Email = "buddyguardapp@outlook.com",
                            EmailConfirmed = false,
                            FirstName = "Hristo",
                            LastName = "Velev",
                            LockoutEnabled = false,
                            NormalizedEmail = "BUDDYGUARDAPP@OUTLOOK.COM",
                            NormalizedUserName = "USER",
                            PasswordHash = "AQAAAAEAACcQAAAAEJweY2E9hwAd81NKCtN+pRKgPrTPcw1UlEGLRpadpPZ4lfkxf8rEISTMDL/HGA3HJQ==",
                            PhoneNumber = "0888888888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "92c28792-8db4-4389-aa11-5af26583abf7",
                            TwoFactorEnabled = false,
                            UserName = "user"
                        },
                        new
                        {
                            Id = "7fe60605-1716-4010-abc6-ddacfd3ecf9b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e246d98e-095c-42bb-970e-70c1d93b268c",
                            Email = "buddyguardapp@outlook.com",
                            EmailConfirmed = false,
                            FirstName = "Hristo",
                            LastName = "Velev",
                            LockoutEnabled = false,
                            NormalizedEmail = "BUDDYGUARDAPP@OUTLOOK.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEHzDMzXaRm3JarM0EwVTfjvy4T+h30nNayAdv6wweqj+V3qvIII6a0X9TSVvZz9MZA==",
                            PhoneNumber = "0888888888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c6a3c92f-9000-457c-9766-8d7c73cae7d9",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3f107bb9-9810-4024-b4e3-182d696421ab",
                            ConcurrencyStamp = "13889fa4-621d-4aa3-b527-c47a68ac5907",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "9e0143a5-0c68-4c92-92d5-34965e2ca95d",
                            ConcurrencyStamp = "72de5d6b-1b48-4dc6-99bb-f655c4dfe76b",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "7fe60605-1716-4010-abc6-ddacfd3ecf9b",
                            RoleId = "3f107bb9-9810-4024-b4e3-182d696421ab"
                        },
                        new
                        {
                            UserId = "307894cc-5f1e-4792-ae6b-40293f3dedb5",
                            RoleId = "9e0143a5-0c68-4c92-92d5-34965e2ca95d"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.AnimalRequest", b =>
                {
                    b.HasOne("BuddyGuard.Core.Data.Models.AnimalType", "AnimalType")
                        .WithMany()
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuddyGuard.Core.Data.Models.Request", "Request")
                        .WithMany("Pets")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.Request", b =>
                {
                    b.HasOne("BuddyGuard.Core.Data.Models.Location", "Location")
                        .WithMany("Requests")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BuddyGuard.Core.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.RequestService", b =>
                {
                    b.HasOne("BuddyGuard.Core.Data.Models.AnimalRequest", "AnimalRequest")
                        .WithMany()
                        .HasForeignKey("AnimalRequestId");

                    b.HasOne("BuddyGuard.Core.Data.Models.Request", "Request")
                        .WithMany("RequestServices")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuddyGuard.Core.Data.Models.Service", "Service")
                        .WithMany("RequestServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalRequest");

                    b.Navigation("Request");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BuddyGuard.Core.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BuddyGuard.Core.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuddyGuard.Core.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BuddyGuard.Core.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.Location", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.Request", b =>
                {
                    b.Navigation("Pets");

                    b.Navigation("RequestServices");
                });

            modelBuilder.Entity("BuddyGuard.Core.Data.Models.Service", b =>
                {
                    b.Navigation("RequestServices");
                });
#pragma warning restore 612, 618
        }
    }
}
